package main

import "encoding/json"
import "io/ioutil"
import "net/http"

// Init creates an API with the given configuration
func Init(url string) *API {
	api := new(API)
	api.url = url
	api.client = &http.Client{}

	return api
}

func (api *API) get(url string) ([]byte, error) {
	r, err := http.NewRequest("GET", api.url+url, nil)

	r.Header.Add("Content-Type", "application/json")

	if err != nil {
		return nil, err
	}

	resp, err := api.client.Do(r)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return nil, err
	}

	return body, nil
}

// GetSeries returns a list of all series from the API
func (api *API) GetSeries() ([]Series, error) {
	body, err := api.get("/series/")

	if err != nil {
		return nil, err
	}

	series := new([]Series)
	err = json.Unmarshal(body, &series)

	if err != nil {
		return nil, err
	}

	return *series, nil
}

// GetProviders returns a list of all providers from the API
func (api *API) GetProviders() ([]Provider, error) {
	body, err := api.get("/provider/")

	if err != nil {
		return nil, err
	}

	providers := new([]Provider)
	err = json.Unmarshal(body, &providers)

	if err != nil {
		return nil, err
	}

	return *providers, nil
}

// API is a struct to interact with the API
type API struct {
	url    string
	client *http.Client
}

// Provider is a struct of what is returned from the /provider/ end-point
// generated by http://www.jsonstruct.com/
type Provider struct {
	BaseProvider        string            `json:"base_provider"`
	BaseProviderOptions map[string]string `json:"base_provider_options"`
	ID                  float64           `json:"id"`
	Name                string            `json:"name"`
	RegexFindCount      string            `json:"regex_find_count"`
}

// Series is a struct of what is returned from /series/ end-point
// generated by http://www.jsonstruct.com/
type Series struct {
	CurrentCount           float64           `json:"current_count"`
	EndDate                string            `json:"end_date"`
	ID                     float64           `json:"id"`
	InfoURL                string            `json:"info_url"`
	MediaType              string            `json:"media_type"`
	MediaTypeOptions       map[string]string `json:"media_type_options"`
	NextRelease            string            `json:"next_release"`
	Provider               string            `json:"provider"`
	ProviderID             float64           `json:"provider_id"`
	ReleaseSchedule        string            `json:"release_schedule"`
	ReleaseScheduleOptions map[string]string `json:"release_schedule_options"`
	ReleaseTime            string            `json:"release_time"`
	SavePath               string            `json:"save_path"`
	SearchTitle            string            `json:"search_title"`
	StartDate              string            `json:"start_date"`
	Title                  string            `json:"title"`
	TotalCount             float64           `json:"total_count"`
}
